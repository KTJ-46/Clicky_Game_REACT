{"version":3,"sources":["components/Jumbotron/Jumbotron.js","components/Card/Card.js","components/MainContainer/MainContainer.js","App.js","index.js"],"names":["Jumbotron","className","Card","props","key","id","onClick","handleClick","clicked","name","alt","src","image","MainContainer","state","images","score","topScore","message","imagesLayout","forEach","index","setState","sort","Math","random","newScore","newTopscore","this","map","Component","App","ReactDOM","render","document","getElementById"],"mappings":"4rDAYmBA,G,MARD,kBACd,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,aAAd,uBACA,uBAAGA,UAAU,QAAb,yECSOC,G,MAdF,SAACC,GAAD,OACT,yBAAKF,UAAW,uDAChBG,IAAMD,EAAME,GACZC,QAAW,kBAAMH,EAAMI,YAAYJ,EAAME,GAAIF,EAAMK,WAGnD,yBAAKH,GAAKF,EAAMM,KAAMC,IAAKP,EAAMM,KAAME,IAAKR,EAAMS,W,OCuEvCC,E,2MA1EXC,MAAQ,CACJC,SACAC,MAAQ,EACRC,SAAU,EACVC,QAAS,4C,EAIbX,YAAc,SAACF,EAAIG,GAEf,IAAMW,EAAe,EAAKL,MAAMC,OAEhC,GAAIP,EAIA,OAHAW,EAAaC,SAAQ,SAACR,EAAOS,GACzBF,EAAaE,GAAOb,SAAU,KAE3B,EAAKc,SAAS,CACjBV,MAAOO,EAAaI,MAAK,kBAAKC,KAAKC,SAAU,MAC7CP,QAAS,6BACTF,MAAO,IAIPG,EAAaC,SAAQ,SAACR,EAAOS,GACtBhB,IAAKO,EAAMP,KACdc,EAAaE,GAAOb,SAAU,MAHjC,MAOyB,EAAKM,MAAxBE,EAPN,EAOMA,MAAOC,EAPb,EAOaA,SACVS,EAAUV,EAAQ,EAClBW,EAAcD,EAAST,EAAUS,EAAUT,EAE/C,OAAO,EAAKK,SAAS,CACjBN,MAAOU,EACPT,SAAUU,EACVf,MAAOO,EAAaI,MAAK,kBAAKC,KAAKC,SAAU,MAC7CP,QAAS,oB,wEAOlB,IAAD,OAEN,OACI,yBAAKjB,UAAU,iCACX,yBAAKA,UAAU,kBACX,+BAAK2B,KAAKd,MAAMI,SAChB,6BACA,qCAAWU,KAAKd,MAAME,OACtB,6BACA,yCAAeY,KAAKd,MAAMG,SAA1B,MAEJ,yBAAKhB,UAAU,aAEV2B,KAAKd,MAAMC,OAAOc,KAAI,SAAAjB,GAAK,OACxB,kBAAC,EAAD,CACIR,IAAMQ,EAAMP,GACZA,GAAKO,EAAMP,GACXI,KAAOG,EAAMH,KACbC,IAAME,EAAMF,IACZF,QAAUI,EAAMJ,QAChBD,YAAc,EAAKA,YACnBK,MAAQA,EAAMA,YAlB9B,S,GAhDoBkB,aCWbC,G,uLATb,OACE,yBAAK9B,UAAU,OACT,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALQ6B,cCDlBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9ff5df1f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Jumbotron.css\"\n\n\nconst Jumbotron = () => (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container text-center\">\n        <h1 className=\"display-4\">Memory Clicky Game!</h1>\n        <p className=\"lead\">Click on any image to score, but don't click on same image twice!</p>\n      </div>\n    </div>\n    );\n    export default Jumbotron;","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => (\n    <div className= \"allCards col-xs-6 col-sm-6 col-md-4col-lg-3 col-xl-3\"\n    key ={props.id}\n    onClick = {() => props.handleClick(props.id, props.clicked)}\n    >\n\n    <img id= {props.name} alt={props.name} src={props.image}\n    ></img>\n\n    \n    </div>\n);\n\n\nexport default Card;","import React, {Component} from \"react\";\nimport Card from \"../Card\";\nimport images from \"../../images.json\";\n//import \"./MainContainer.css\"\n\nclass MainContainer extends Component {\n    state = {\n        images,\n        score : 0,\n        topScore: 0,\n        message: \"Start the game by clicking on the Images\"\n    };\n\n\n    handleClick = (id, clicked) => {\n\n        const imagesLayout = this.state.images\n\n        if (clicked){\n            imagesLayout.forEach((image, index) => {\n                imagesLayout[index].clicked = false\n            });\n            return this.setState({\n                image: imagesLayout.sort(()=> Math.random()- 0.5 ),\n                message: \"You clicked on this again!\",\n                score: 0\n            })\n        }\n            else {\n                imagesLayout.forEach((image, index) => {\n                    if(id===image.id){\n                    imagesLayout[index].clicked = true\n                    }\n                });\n\n                const {score, topScore} = this.state;\n                var newScore= score + 1;\n                var newTopscore = newScore>topScore? newScore: topScore;\n\n                return this.setState({\n                    score: newScore,\n                    topScore: newTopscore,\n                    image: imagesLayout.sort(()=> Math.random()- 0.5 ),\n                    message: \"Correct guess!\"\n\n                });\n\n            };\n    };\n\nrender () {\n\n    return (\n        <div className=\"container-fluid MainContainer\">\n            <div className=\"message center\">\n                <p> {this.state.message}</p>\n                <br/>\n                <p>Score: {this.state.score}</p>\n                <br/>\n                <p>Top Score: {this.state.topScore} </p>\n            </div>\n            <div className=\"gameCards\">\n                \n                {this.state.images.map(image =>(\n                    <Card\n                        key= {image.id}\n                        id= {image.id}\n                        name= {image.name}\n                        alt= {image.alt}\n                        clicked= {image.clicked}\n                        handleClick= {this.handleClick}\n                        image= {image.image}\n                    />\n                ))}\n            </div>;\n        </div>\n    );\n\n};\n}\nexport default MainContainer; ","import React, {Component} from 'react';\nimport Jumbotron from \"./components/Jumbotron\";\nimport MainContainer from \"./components/MainContainer\";\nimport './App.css';\n\nclass App extends Component {\n  render(){\n  return (\n    <div className=\"App\">\n          <Jumbotron/>\n          <MainContainer/>\n    </div>\n\n  );\n}}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}